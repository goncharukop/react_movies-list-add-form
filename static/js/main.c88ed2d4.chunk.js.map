{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","defaultForm","NewMovie","state","handleChange","target","setState","prevState","name","value","handleSubmit","event","preventDefault","props","addMovie","setDefaultForm","onSubmit","this","method","Object","entries","fieldName","htmlFor","toUpperCase","slice","type","onChange","required","onClick","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"ixEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,0BCvBJK,EAAc,CAClBf,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,IAGGE,EAAb,4MACEC,MADF,eACeF,GADf,EAGEG,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OAChB,EAAKC,UAAS,SAAAC,GAAS,kCAClBA,GADkB,kBAEpBF,EAAOG,KAAOH,EAAOI,YAN5B,EAUEC,aAAe,SAACC,GACdA,EAAMC,iBAEN,IAAMd,EAAK,eAAQ,EAAKK,OAExB,EAAKU,MAAMC,SAAShB,GAEpB,EAAKQ,SAAL,eAAmBL,KAjBvB,EAoBEc,eAAiB,WACf,EAAKT,SAAL,eAAmBL,KArBvB,uDAwBY,IAAD,OACP,OACE,0BACEX,UAAU,gBACV0B,SAAUC,KAAKP,aACfF,KAAK,WACLU,OAAO,QAELC,OAAOC,QAAQH,KAAKd,OAAON,KAAI,mCAAEwB,EAAF,KAAaZ,EAAb,YAC/B,oCACE,2BAAOa,QAAQ,aACZD,EAAU,GAAGE,cAAgBF,EAAUG,MAAM,IAEhD,2BACEzB,IAAKsB,EACLI,KAAK,OACLjB,KAAMa,EACNZ,MAAOA,EACPiB,SAAU,EAAKtB,aACfuB,UAAQ,QAKd,4BACErC,UAAU,kBACVmC,KAAK,UAFP,aAOA,4BACEnC,UAAU,iBACVmC,KAAK,SACLG,QAASX,KAAKF,gBAHhB,mBAvDR,GAA8Bc,a,QCJjBC,G,MAAb,4MACE3B,MAAQ,CACNP,OAAQmC,GAFZ,EAKEjB,SAAW,SAAChB,GACV,EAAKQ,UAAS,SAAAH,GAAK,MAAK,CACtBP,OAAO,GAAD,mBAAMO,EAAMP,QAAZ,CAAoBE,SAPhC,uDAWY,IACAF,EAAWqB,KAAKd,MAAhBP,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUwB,SAAUG,KAAKH,iBApBnC,GAAyBe,cCFzBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c88ed2d4.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieCard.scss';\r\n\r\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nMovieCard.defaultProps = {\r\n  description: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './MoviesList.scss';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({ movies }) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      description: PropTypes.string,\r\n      imgUrl: PropTypes.string.isRequired,\r\n      imdbUrl: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nMoviesList.defaultProps = {\r\n  movies: [],\r\n};\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst defaultForm = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport class NewMovie extends Component {\n  state = { ...defaultForm }\n\n  handleChange = ({ target }) => {\n    this.setState(prevState => ({\n      ...prevState,\n      [target.name]: target.value,\n    }));\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const movie = { ...this.state };\n\n    this.props.addMovie(movie);\n\n    this.setState({ ...defaultForm });\n  }\n\n  setDefaultForm = () => {\n    this.setState({ ...defaultForm });\n  };\n\n  render() {\n    return (\n      <form\n        className=\"ui large form\"\n        onSubmit={this.handleSubmit}\n        name=\"newMovie\"\n        method=\"post\"\n      >\n        { Object.entries(this.state).map(([fieldName, value]) => (\n          <>\n            <label htmlFor=\"fieldName\">\n              {fieldName[0].toUpperCase() + fieldName.slice(1)}\n            </label>\n            <input\n              key={fieldName}\n              type=\"text\"\n              name={fieldName}\n              value={value}\n              onChange={this.handleChange}\n              required\n            />\n          </>\n        ))}\n\n        <button\n          className=\"ui green button\"\n          type=\"submit\"\n        >\n          Add movie\n        </button>\n\n        <button\n          className=\"ui grey button\"\n          type=\"button\"\n          onClick={this.setDefaultForm}\n        >\n          Clear form\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport 'semantic-ui-css/semantic.min.css';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}